# -*- coding: utf-8 -*-
"""pemodelan-simulasi-rantai-markov-probabilitas-pengunjung-museum.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/decellll/5c3bb387454a17c9dbfff7a5ccb7f3b3/pemodelan-simulasi-rantai-markov-probabilitas-pengunjung-museum.ipynb

**Studi kasus:**

Misalkan:
- Dari 100 pengunjung museum yang datang hari ini, 60 pengunjung juga datang besok.
- Dari 100 pengunjung yang tidak datang hari ini, 20 pengunjung tetap tidak datang besok.

**Tentukan:**
1. Matriks Transisinya!
2. Tentukan probabilitas kejadian yang akan datang untuk jangka panjang!
3. Kondisi seimbang/stabil (Steady State)


**Penyelesaian:**

1. Probabilitas Pengunjung Datang Hari Ini dan Besok:
- Dari 100 pengunjung yang datang hari ini, 60 pengunjung datang besok.
- Probabilitas ini adalah 60 dari 100, yaitu 0,6.
2. Probabilitas Pengunjung Datang Hari Ini tetapi Tidak Datang Besok:
- Dari 100 pengunjung yang datang hari ini, 40 pengunjung tidak datang besok.
- Probabilitas ini adalah 40 dari 100, yaitu 0,4.
3. Probabilitas Pengunjung Tidak Datang Hari Ini dan Besok:
- Dari 100 pengunjung yang tidak datang hari ini, 20 pengunjung juga tidak datang besok.
- Probabilitas ini adalah 20 dari 100, yaitu 0,2.
4. Probabilitas Pengunjung Tidak Datang Hari Ini tetapi Datang Besok:
- Dari 100 pengunjung yang tidak datang hari ini, 80 pengunjung datang besok.
- Probabilitas ini adalah 80 dari 100, yaitu 0,8.
"""

from numpy import *
from matplotlib.pyplot import *
from IPython.display import Math
import sympy as sym
from numpy.linalg import *

"""Setelah melakukan import library selanjutnya menampilkan matriks transisi yang
berisi probabilitas transisi, dimana ini merupakan kondisi awal dari kejadian yang menjadi tolak ukur perhitungan.
"""

# Aplikasi Model Rantai Markov 2
# Pengunjung hari ini dan besok
C = np.array([[60, 40], [80, 20]])
print("Matriks C=")
display(Math(sym.latex(sym.simplify(C))))

"""Probabilitas pada baris pertama yaitu kondisi pengunjung hari ini."""

# Pengunjung hari ini dan besok
C0 = np.array([60, 40])
print("Matriks C0=")
display(Math(sym.latex(sym.simplify(C0))))

"""Jika hari ini ada pengunjung maka didapatkan matriks transisi nya adalah

[ 60 40 ]

dan matriks transisi jika hari ini tidak ada pengunjung,

[ 80 20 ]

Sehingga peluang hari ketiga jika hari ini ada pengunjung akan ditampilkan pada hasil running python berikut.

"""

#Prediksi hari ke-3
C1=dot(C0,C)
print("matriks C1 = ")
display(Math(sym.latex(sym.simplify(C1))))

"""Peluang hari selanjutnya didapat dengan cara mengalikan matriks transisi baris
dengan matriks transisi nya,

[ 60 0,4 ] × [ 60 40 80 20 ]

menghasilkan peluang cuaca hari ke-3 adalah [ 6800 3200 ].

Proses perhitungan hari ke-4 juga sama dengan mengalikan matriks probabilitas hari
ke-3 dengan matriks transisi nya,

[ 6800 3200 ] × [ 60 40 80 20 ]

menghasilkan peluang pengunjung hari ke-4 adalah [ 664000 336000 ]. Seperti yang
ditampilkan pada hasil running dengan program pyhton berikut
"""

#Prediksi hari ke-4
C_2=dot(C,C)
print("matriks C2 = ")
C2=dot(C0,C_2)
display(Math(sym.latex(sym.simplify(C2))))

"""Karena peluang pengunjung pada hari berikutnya merupakan perkalian dari matriks
probabilitas pada hari sebelumnya dengan matriks transisi nya maka untuk
perhitungan peluang pengunjung hari ke-5 dilakukan hingga didapatkan hasil matriks
probabilitas yang mirip.
"""

#Prediksi hari ke-5
C_3=dot(C_2,C)
print("matriks C3 = ")
C3=dot(C0,C_3)
display(Math(sym.latex(sym.simplify(C3))))

"""Matriks peluang cuaca pada hari ke-5,

"""

#Prediksi hari ke-6
C_4=dot(C_3,C)
print("matriks C4 = ")
C4=dot(C0,C_4)
display(Math(sym.latex(sym.simplify(C4))))

"""Jika belum terlihat selisih matriks probabilitas pada hari sebelumnya maka dapat
dilakukan perhitungan matriks probabilitas pada hari selanjutnya.
"""

#Prediksi hari ke-7
C_5=dot(C_4,C)
print("matriks C5 = ")
C5=dot(C0,C_5)
display(Math(sym.latex(sym.simplify(C5))))

"""Peluang cuaca hari ke-7"""

#Prediksi hari ke-8
C_6=dot(C_5,C)
print("matriks C6 = ")
C6=dot(C0,C_6)
display(Math(sym.latex(sym.simplify(C6))))

"""Sebenarnya pada perhitungan matriks probabilitas pada hari ke-6 sudah terlihat adanya hasil yang stabil pada matriks [ 670 330 ], namun untuk lebih memperlihatkan polanya maka pada latihan ini dilakukan perhitungan dengan python hingga hari ke9."""

#cek titik equilibrum (6665600000,3334400000)

D=np.array([6665600000,3334400000])
A=dot(D,C)
display(Math(sym.latex(sym.simplify(A))))

"""Dari perhitungan probabilitas jangka panjang di atas didapatkan bahwa kondisi
seimbang/stabil (Steady State) dihasilkan pada saat probabilitasnya pada kondisi
[ 6665600000,3334400000 ]. Untuk perhitungan saat kondisi hari ini tidak ada pengunjung dapat dilakukan simulasi mandiri untuk menghitung probabilitas jangka panjang dan kondisi seimbang/stabil nya

**Referensi**

Choirul Basir & Aden (2022) "PRAKTIKUM PEMODELAN MATEMATIKA (Dengan PYTHON)". Universitas Pamulang.
"""